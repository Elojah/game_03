// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/elojah/game_03/pkg/entity/dto/template.proto

package dto

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CreateTemplateReq struct {
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (m *CreateTemplateReq) Reset()      { *m = CreateTemplateReq{} }
func (*CreateTemplateReq) ProtoMessage() {}
func (*CreateTemplateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a05e5996e911a713, []int{0}
}
func (m *CreateTemplateReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateTemplateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateTemplateReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateTemplateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTemplateReq.Merge(m, src)
}
func (m *CreateTemplateReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateTemplateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTemplateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTemplateReq proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateTemplateReq)(nil), "dto.CreateTemplateReq")
	golang_proto.RegisterType((*CreateTemplateReq)(nil), "dto.CreateTemplateReq")
}

func init() {
	proto.RegisterFile("github.com/elojah/game_03/pkg/entity/dto/template.proto", fileDescriptor_a05e5996e911a713)
}
func init() {
	golang_proto.RegisterFile("github.com/elojah/game_03/pkg/entity/dto/template.proto", fileDescriptor_a05e5996e911a713)
}

var fileDescriptor_a05e5996e911a713 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8d, 0xa1, 0x4e, 0x03, 0x41,
	0x10, 0x86, 0x77, 0x02, 0x21, 0xe1, 0x1c, 0xa7, 0x08, 0xe2, 0x0f, 0xc1, 0x80, 0xa1, 0x4b, 0x52,
	0x81, 0x07, 0x83, 0x42, 0x34, 0x78, 0xb2, 0x47, 0x87, 0x6d, 0xa1, 0xc7, 0x1c, 0xcd, 0x54, 0xe0,
	0x78, 0x04, 0x1e, 0x83, 0x47, 0x40, 0x56, 0x56, 0x9e, 0xac, 0x64, 0x67, 0x0d, 0xb2, 0x12, 0x49,
	0xb2, 0x20, 0x70, 0xdf, 0x97, 0xc9, 0x37, 0x7f, 0x75, 0x1e, 0xa7, 0x3a, 0x59, 0x34, 0x83, 0x3b,
	0x69, 0x3d, 0xcf, 0xe4, 0x21, 0x4c, 0x7c, 0x0c, 0x2d, 0xdf, 0x9e, 0x0d, 0x7d, 0xf7, 0x18, 0x3d,
	0x3f, 0xe9, 0x54, 0x5f, 0xfc, 0x58, 0xc5, 0x2b, 0xb7, 0xdd, 0x2c, 0x28, 0x0f, 0xba, 0xb9, 0xa8,
	0xd4, 0x5b, 0x63, 0x95, 0x83, 0xd3, 0x7f, 0x75, 0x94, 0x28, 0xbe, 0xdc, 0x9a, 0xc5, 0x7d, 0xb1,
	0x22, 0x85, 0x7e, 0x9b, 0xa3, 0xe3, 0x6a, 0xef, 0x72, 0xce, 0x41, 0xf9, 0xe6, 0xef, 0xd7, 0x88,
	0x9f, 0xeb, 0xba, 0xda, 0xbe, 0x0e, 0x2d, 0xef, 0xd3, 0x21, 0x9d, 0xec, 0x8e, 0x0a, 0x5f, 0x5c,
	0xad, 0x12, 0x5c, 0x9f, 0xe0, 0xd6, 0x09, 0x6e, 0x93, 0x40, 0xdf, 0x09, 0xf4, 0x6a, 0xa0, 0x77,
	0x03, 0x7d, 0x18, 0x68, 0x69, 0xa0, 0x95, 0x81, 0x7a, 0x03, 0x7d, 0x1a, 0xe8, 0xcb, 0xe0, 0x36,
	0x06, 0x7a, 0xcb, 0x70, 0xcb, 0x0c, 0xea, 0x33, 0xdc, 0x3a, 0xc3, 0x35, 0x3b, 0x65, 0x79, 0xf8,
	0x13, 0x00, 0x00, 0xff, 0xff, 0x21, 0xc9, 0xb5, 0x56, 0xe8, 0x00, 0x00, 0x00,
}

func (this *CreateTemplateReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateTemplateReq)
	if !ok {
		that2, ok := that.(CreateTemplateReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	return true
}
func (this *CreateTemplateReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&dto.CreateTemplateReq{")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTemplate(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *CreateTemplateReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateTemplateReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateTemplateReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTemplate(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTemplate(dAtA []byte, offset int, v uint64) int {
	offset -= sovTemplate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedCreateTemplateReq(r randyTemplate, easy bool) *CreateTemplateReq {
	this := &CreateTemplateReq{}
	this.Name = string(randStringTemplate(r))
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyTemplate interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneTemplate(r randyTemplate) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringTemplate(r randyTemplate) string {
	v1 := r.Intn(100)
	tmps := make([]rune, v1)
	for i := 0; i < v1; i++ {
		tmps[i] = randUTF8RuneTemplate(r)
	}
	return string(tmps)
}
func randUnrecognizedTemplate(r randyTemplate, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldTemplate(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldTemplate(dAtA []byte, r randyTemplate, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateTemplate(dAtA, uint64(key))
		v2 := r.Int63()
		if r.Intn(2) == 0 {
			v2 *= -1
		}
		dAtA = encodeVarintPopulateTemplate(dAtA, uint64(v2))
	case 1:
		dAtA = encodeVarintPopulateTemplate(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateTemplate(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateTemplate(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateTemplate(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateTemplate(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *CreateTemplateReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTemplate(uint64(l))
	}
	return n
}

func sovTemplate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTemplate(x uint64) (n int) {
	return sovTemplate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *CreateTemplateReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateTemplateReq{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTemplate(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *CreateTemplateReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateTemplateReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateTemplateReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTemplate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTemplate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTemplate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTemplate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTemplate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTemplate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTemplate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTemplate = fmt.Errorf("proto: unexpected end of group")
)
